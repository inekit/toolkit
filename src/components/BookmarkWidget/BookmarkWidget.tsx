import React, { useState } from 'react';
import styles from './BookmarkWidget.module.scss';

interface BookmarkWidgetProps {
  variant?: 'header' | 'page';
}

const BookmarkWidget: React.FC<BookmarkWidgetProps> = ({
  variant = 'header',
}) => {
  const [isBookmarked, setIsBookmarked] = useState(false);
  const [showTooltip, setShowTooltip] = useState(false);

  const handleBookmark = () => {
    if (navigator.share) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Web Share API –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      navigator.share({
        title: document.title,
        url: window.location.href,
      });
    } else if (navigator.clipboard) {
      // –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
      navigator.clipboard.writeText(window.location.href);
      setShowTooltip(true);
      setTimeout(() => setShowTooltip(false), 2000);
    } else {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      const textArea = document.createElement('textarea');
      textArea.value = window.location.href;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      setShowTooltip(true);
      setTimeout(() => setShowTooltip(false), 2000);
    }
  };

  const handleAddToBookmarks = () => {
    if (window.sidebar && window.sidebar.addPanel) {
      // Firefox
      window.sidebar.addPanel(document.title, window.location.href, '');
    } else if (window.external && 'AddFavorite' in window.external) {
      // IE
      window.external.AddFavorite(window.location.href, document.title);
    } else {
      // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã
      if (navigator.userAgent.indexOf('Chrome') !== -1) {
        alert('–ù–∞–∂–º–∏—Ç–µ Ctrl+D (–∏–ª–∏ Cmd+D –Ω–∞ Mac) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–ª–∞–¥–∫–∏');
      } else if (navigator.userAgent.indexOf('Firefox') !== -1) {
        alert('–ù–∞–∂–º–∏—Ç–µ Ctrl+D (–∏–ª–∏ Cmd+D –Ω–∞ Mac) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–ª–∞–¥–∫–∏');
      } else if (navigator.userAgent.indexOf('Safari') !== -1) {
        alert('–ù–∞–∂–º–∏—Ç–µ Cmd+D –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–ª–∞–¥–∫–∏');
      } else {
        alert('–ù–∞–∂–º–∏—Ç–µ Ctrl+D –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–ª–∞–¥–∫–∏');
      }
    }
  };

  if (variant === 'header') {
    return (
      <div className={styles.bookmarkContainer}>
        <button
          className={`${styles.bookmarkBtn} ${styles.header}`}
          onClick={handleBookmark}
          onMouseEnter={() => setShowTooltip(true)}
          onMouseLeave={() => setShowTooltip(false)}
          aria-label="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π"
          title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π"
        >
          üì§
        </button>
        {showTooltip && (
          <div className={styles.tooltip}>
            {navigator.share ? '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' : '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!'}
          </div>
        )}
      </div>
    );
  }

  // –í–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
  return (
    <div className={styles.pageBookmark}>
      <div className={styles.bookmarkActions}>
        <button
          className={styles.bookmarkBtn}
          onClick={handleAddToBookmarks}
          title="–î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–ª–∞–¥–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞"
        >
          üîñ –î–æ–±–∞–≤–∏—Ç—å –≤ –∑–∞–∫–ª–∞–¥–∫–∏
        </button>
        <button
          className={styles.shareBtn}
          onClick={handleBookmark}
          title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π"
        >
          üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
        </button>
      </div>
      {showTooltip && (
        <div className={styles.tooltip}>
          {navigator.share ? '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' : '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!'}
        </div>
      )}
    </div>
  );
};

export default BookmarkWidget;
