import React, { useState } from 'react';
import styles from './PetAgeCalculator.module.scss';

const PetAgeCalculator: React.FC = () => {
  const [petType, setPetType] = useState('dog');
  const [petAge, setPetAge] = useState('');
  const [petSize, setPetSize] = useState('medium');
  const [result, setResult] = useState<number | null>(null);
  const [error, setError] = useState('');

  const calculateHumanAge = () => {
    setError('');

    if (!petAge) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –ø–∏—Ç–æ–º—Ü–∞');
      return;
    }

    const age = parseFloat(petAge);
    if (isNaN(age) || age < 0 || age > 50) {
      setError('–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 50 –ª–µ—Ç');
      return;
    }

    let humanAge: number;

    switch (petType) {
      case 'dog':
        humanAge = calculateDogAge(age, petSize);
        break;
      case 'cat':
        humanAge = calculateCatAge(age);
        break;
      case 'bird':
        humanAge = calculateBirdAge(age);
        break;
      case 'hamster':
        humanAge = calculateHamsterAge(age);
        break;
      case 'rabbit':
        humanAge = calculateRabbitAge(age);
        break;
      case 'fish':
        humanAge = calculateFishAge(age);
        break;
      default:
        humanAge = age * 7; // –ü—Ä–æ—Å—Ç–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
    }

    setResult(humanAge);
  };

  const calculateDogAge = (dogAge: number, size: string): number => {
    // –§–æ—Ä–º—É–ª–∞ –¥–ª—è —Å–æ–±–∞–∫ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
    if (dogAge <= 1) {
      return 15;
    } else if (dogAge <= 2) {
      return 15 + 9;
    } else {
      let multiplier: number;
      switch (size) {
        case 'small':
          multiplier = 4;
          break; // –ú–∞–ª–µ–Ω—å–∫–∏–µ —Å–æ–±–∞–∫–∏
        case 'medium':
          multiplier = 5;
          break; // –°—Ä–µ–¥–Ω–∏–µ —Å–æ–±–∞–∫–∏
        case 'large':
          multiplier = 6;
          break; // –ë–æ–ª—å—à–∏–µ —Å–æ–±–∞–∫–∏
        default:
          multiplier = 5;
      }
      return 24 + (dogAge - 2) * multiplier;
    }
  };

  const calculateCatAge = (catAge: number): number => {
    if (catAge <= 1) return 15;
    if (catAge <= 2) return 24;
    return 24 + (catAge - 2) * 4;
  };

  const calculateBirdAge = (birdAge: number): number => {
    // –ü—Ç–∏—Ü—ã —Å—Ç–∞—Ä–µ—é—Ç –º–µ–¥–ª–µ–Ω–Ω–µ–µ
    return birdAge * 3;
  };

  const calculateHamsterAge = (hamsterAge: number): number => {
    // –•–æ–º—è–∫–∏ —Å—Ç–∞—Ä–µ—é—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ
    return hamsterAge * 25;
  };

  const calculateRabbitAge = (rabbitAge: number): number => {
    if (rabbitAge <= 1) return 20;
    if (rabbitAge <= 2) return 28;
    return 28 + (rabbitAge - 2) * 6;
  };

  const calculateFishAge = (fishAge: number): number => {
    // –†—ã–±—ã —Å—Ç–∞—Ä–µ—é—Ç –º–µ–¥–ª–µ–Ω–Ω–æ
    return fishAge * 2;
  };

  const clearForm = () => {
    setPetType('dog');
    setPetAge('');
    setPetSize('medium');
    setResult(null);
    setError('');
  };

  const getPetInfo = () => {
    switch (petType) {
      case 'dog':
        return {
          name: '–°–æ–±–∞–∫–∞',
          icon: 'üêï',
          description: '–õ—É—á—à–∏–π –¥—Ä—É–≥ —á–µ–ª–æ–≤–µ–∫–∞',
          lifeExpectancy: '10-15 –ª–µ—Ç',
        };
      case 'cat':
        return {
          name: '–ö–æ—à–∫–∞',
          icon: 'üê±',
          description: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∫–æ–º–ø–∞–Ω—å–æ–Ω',
          lifeExpectancy: '12-18 –ª–µ—Ç',
        };
      case 'bird':
        return {
          name: '–ü—Ç–∏—Ü–∞',
          icon: 'üê¶',
          description: '–ö—Ä—ã–ª–∞—Ç—ã–π –¥—Ä—É–≥',
          lifeExpectancy: '5-20 –ª–µ—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∏–¥–∞)',
        };
      case 'hamster':
        return {
          name: '–•–æ–º—è–∫',
          icon: 'üêπ',
          description: '–ú–∞–ª–µ–Ω—å–∫–∏–π –≥—Ä—ã–∑—É–Ω',
          lifeExpectancy: '2-3 –≥–æ–¥–∞',
        };
      case 'rabbit':
        return {
          name: '–ö—Ä–æ–ª–∏–∫',
          icon: 'üê∞',
          description: '–ü—É—à–∏—Å—Ç—ã–π –ø–∏—Ç–æ–º–µ—Ü',
          lifeExpectancy: '8-12 –ª–µ—Ç',
        };
      case 'fish':
        return {
          name: '–†—ã–±–∫–∞',
          icon: 'üê†',
          description: '–í–æ–¥–Ω—ã–π –æ–±–∏—Ç–∞—Ç–µ–ª—å',
          lifeExpectancy: '3-10 –ª–µ—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∏–¥–∞)',
        };
      default:
        return {
          name: '–ñ–∏–≤–æ—Ç–Ω–æ–µ',
          icon: 'üêæ',
          description: '–í–∞—à –ø–∏—Ç–æ–º–µ—Ü',
          lifeExpectancy: '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∏–¥–∞',
        };
    }
  };

  const getAgeDescription = (humanAge: number) => {
    if (humanAge < 1) return '–ú–ª–∞–¥–µ–Ω–µ—Ü';
    if (humanAge < 3) return '–ú–∞–ª—ã—à';
    if (humanAge < 7) return '–î–æ—à–∫–æ–ª—å–Ω–∏–∫';
    if (humanAge < 12) return '–†–µ–±–µ–Ω–æ–∫';
    if (humanAge < 18) return '–ü–æ–¥—Ä–æ—Å—Ç–æ–∫';
    if (humanAge < 25) return '–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫';
    if (humanAge < 35) return '–í–∑—Ä–æ—Å–ª—ã–π';
    if (humanAge < 50) return '–ó—Ä–µ–ª—ã–π –≤–æ–∑—Ä–∞—Å—Ç';
    if (humanAge < 65) return '–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç';
    if (humanAge < 80) return '–ü–æ–∂–∏–ª–æ–π';
    return '–î–æ–ª–≥–æ–∂–∏—Ç–µ–ª—å';
  };

  const getSizeDescription = (size: string) => {
    switch (size) {
      case 'small':
        return '–ú–∞–ª–µ–Ω—å–∫–∞—è (–¥–æ 10 –∫–≥)';
      case 'medium':
        return '–°—Ä–µ–¥–Ω—è—è (10-25 –∫–≥)';
      case 'large':
        return '–ë–æ–ª—å—à–∞—è (–±–æ–ª–µ–µ 25 –∫–≥)';
      default:
        return '–°—Ä–µ–¥–Ω—è—è';
    }
  };

  return (
    <div className={`${styles.calculator} ageCalculator`}>
      <div className="calculatorHeader">
        <h2>üêæ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–∏—Ç–æ–º—Ü–∞</h2>
        <p>
          –£–∑–Ω–∞–π—Ç–µ, —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –≤–∞—à–µ–º—É –ø–∏—Ç–æ–º—Ü—É –ø–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –º–µ—Ä–∫–∞–º.
          –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ä–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö.
        </p>
      </div>

      <form
        className="calculatorForm"
        onSubmit={(e) => {
          e.preventDefault();
          calculateHumanAge();
        }}
      >
        <div className="inputGroup">
          <label htmlFor="petType">–í–∏–¥ –ø–∏—Ç–æ–º—Ü–∞</label>
          <select
            id="petType"
            value={petType}
            onChange={(e) => setPetType(e.target.value)}
          >
            <option value="dog">üêï –°–æ–±–∞–∫–∞</option>
            <option value="cat">üê± –ö–æ—à–∫–∞</option>
            <option value="bird">üê¶ –ü—Ç–∏—Ü–∞</option>
            <option value="hamster">üêπ –•–æ–º—è–∫</option>
            <option value="rabbit">üê∞ –ö—Ä–æ–ª–∏–∫</option>
            <option value="fish">üê† –†—ã–±–∫–∞</option>
          </select>
          <div className="help">
            {getPetInfo().description} ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏:{' '}
            {getPetInfo().lifeExpectancy}
          </div>
        </div>

        {petType === 'dog' && (
          <div className="inputGroup">
            <label htmlFor="petSize">–†–∞–∑–º–µ—Ä —Å–æ–±–∞–∫–∏</label>
            <select
              id="petSize"
              value={petSize}
              onChange={(e) => setPetSize(e.target.value)}
            >
              <option value="small">–ú–∞–ª–µ–Ω—å–∫–∞—è (–¥–æ 10 –∫–≥)</option>
              <option value="medium">–°—Ä–µ–¥–Ω—è—è (10-25 –∫–≥)</option>
              <option value="large">–ë–æ–ª—å—à–∞—è (–±–æ–ª–µ–µ 25 –∫–≥)</option>
            </select>
            <div className="help">{getSizeDescription(petSize)}</div>
          </div>
        )}

        <div className="inputGroup">
          <label htmlFor="petAge">–í–æ–∑—Ä–∞—Å—Ç –ø–∏—Ç–æ–º—Ü–∞ (–≤ –≥–æ–¥–∞—Ö)</label>
          <input
            id="petAge"
            type="number"
            value={petAge}
            onChange={(e) => setPetAge(e.target.value)}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 3"
            step="0.1"
            min="0"
            max="50"
          />
          <div className="help">
            –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö. –î–ª—è –ø–∏—Ç–æ–º—Ü–µ–≤ –º–ª–∞–¥—à–µ –≥–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ
            –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.5 –¥–ª—è 6 –º–µ—Å—è—Ü–µ–≤).
          </div>
        </div>

        {error && <div className="error">{error}</div>}

        <div className="inputGroup">
          <button type="submit" className="calculateBtn">
            –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç
          </button>
        </div>
      </form>

      {result !== null && (
        <div className="result ageResult">
          <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞</h3>
          <div className="resultValue">
            <span className="amount">{result.toFixed(1)}</span>
            <span className="unit">—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –ª–µ—Ç</span>
          </div>

          <div className="petInfo">
            <h4>
              {getPetInfo().icon} {getPetInfo().name}
            </h4>
            <p>
              <strong>–í–æ–∑—Ä–∞—Å—Ç –ø–∏—Ç–æ–º—Ü–∞:</strong> {petAge}{' '}
              {parseFloat(petAge) === 1
                ? '–≥–æ–¥'
                : parseFloat(petAge) < 5
                ? '–≥–æ–¥–∞'
                : '–ª–µ—Ç'}
            </p>
            {petType === 'dog' && (
              <p>
                <strong>–†–∞–∑–º–µ—Ä:</strong> {getSizeDescription(petSize)}
              </p>
            )}
            <p>
              <strong>–ü–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º –º–µ—Ä–∫–∞–º:</strong>{' '}
              {getAgeDescription(result)}
            </p>
          </div>

          <div className="recommendation">
            <strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</strong> {getPetTypeFact()}
          </div>
        </div>
      )}

      <div className="inputGroup" style={{ marginTop: '2rem' }}>
        <button
          type="button"
          onClick={clearForm}
          className="calculateBtn"
          style={{ background: 'var(--gray-500)' }}
        >
          –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
        </button>
      </div>
    </div>
  );

  function getPetTypeFact(): string {
    switch (petType) {
      case 'dog':
        return '–°–æ–±–∞–∫–∏ –ø–æ–Ω–∏–º–∞—é—Ç –¥–æ 250 —Å–ª–æ–≤ –∏ –∂–µ—Å—Ç–æ–≤, –∞ –∏—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å—Ä–∞–≤–Ω–∏–º —Å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º 2-–ª–µ—Ç–Ω–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞.';
      case 'cat':
        return '–ö–æ—à–∫–∏ –ø—Ä–æ–≤–æ–¥—è—Ç 70% —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ –≤–æ —Å–Ω–µ, —á—Ç–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 13-16 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å.';
      case 'bird':
        return '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø—É–≥–∞–∏ –º–æ–≥—É—Ç –∂–∏—Ç—å –¥–æ 80 –ª–µ—Ç –∏ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –±–æ–ª–µ–µ 1000 —Å–ª–æ–≤.';
      case 'hamster':
        return '–•–æ–º—è–∫–∏ –º–æ–≥—É—Ç –±–µ–≥–∞—Ç—å –¥–æ 8 –∫–º –∑–∞ –Ω–æ—á—å –≤ —Å–≤–æ–µ–º –∫–æ–ª–µ—Å–µ.';
      case 'rabbit':
        return '–ö—Ä–æ–ª–∏–∫–∏ –º–æ–≥—É—Ç –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å —É—à–∏ –Ω–∞ 270 –≥—Ä–∞–¥—É—Å–æ–≤ –∏ –≤–∏–¥–µ—Ç—å –Ω–∞ 360 –≥—Ä–∞–¥—É—Å–æ–≤ –≤–æ–∫—Ä—É–≥ —Å–µ–±—è.';
      case 'fish':
        return '–ó–æ–ª–æ—Ç—ã–µ —Ä—ã–±–∫–∏ –º–æ–≥—É—Ç –ø–æ–º–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏—è –¥–æ 3 –º–µ—Å—è—Ü–µ–≤ –∏ —Ä–∞–∑–ª–∏—á–∞—Ç—å –ª–∏—Ü–∞ –ª—é–¥–µ–π.';
      default:
        return '–ö–∞–∂–¥—ã–π –ø–∏—Ç–æ–º–µ—Ü —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –ª—é–±–≤–∏ –∏ –∑–∞–±–æ—Ç—ã!';
    }
  }
};

export default PetAgeCalculator;
