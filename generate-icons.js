const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

// –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫ –¥–ª—è PWA
const iconSizes = [16, 32, 192, 512];

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∫–æ–Ω–æ–∫ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const iconsDir = path.join(__dirname, 'public');
if (!fs.existsSync(iconsDir)) {
  fs.mkdirSync(iconsDir, { recursive: true });
}

async function generateIcons() {
  console.log('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PNG –∏–∫–æ–Ω–æ–∫ –∏–∑ SVG...');

  try {
    // –ß–∏—Ç–∞–µ–º SVG —Ñ–∞–π–ª
    const svgPath = path.join(__dirname, 'public', 'favicon.svg');
    if (!fs.existsSync(svgPath)) {
      throw new Error('SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + svgPath);
    }

    const svgBuffer = fs.readFileSync(svgPath);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    for (const size of iconSizes) {
      const iconName = `icon-${size}x${size}.png`;
      const iconPath = path.join(iconsDir, iconName);

      console.log(`üì± –°–æ–∑–¥–∞–µ–º ${iconName} (${size}x${size})...`);

      await sharp(svgBuffer).resize(size, size).png().toFile(iconPath);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
      const stats = fs.statSync(iconPath);
      console.log(
        `‚úÖ ${iconName} —Å–æ–∑–¥–∞–Ω (${(stats.size / 1024).toFixed(2)} KB)`
      );
    }

    // –°–æ–∑–¥–∞–µ–º favicon.ico (16x16)
    console.log('üîß –°–æ–∑–¥–∞–µ–º favicon-16x16.png...');
    await sharp(svgBuffer)
      .resize(16, 16)
      .png()
      .toFile(path.join(iconsDir, 'favicon-16x16.png'));

    console.log('‚úÖ favicon-16x16.png —Å–æ–∑–¥–∞–Ω');

    // –°–æ–∑–¥–∞–µ–º apple-touch-icon (180x180) - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è iOS
    console.log('üçé –°–æ–∑–¥–∞–µ–º apple-touch-icon.png (180x180)...');
    await sharp(svgBuffer)
      .resize(180, 180)
      .png()
      .toFile(path.join(iconsDir, 'apple-touch-icon.png'));

    console.log('‚úÖ apple-touch-icon.png —Å–æ–∑–¥–∞–Ω (180x180)');

    // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è iOS (152x152)
    console.log('üì± –°–æ–∑–¥–∞–µ–º icon-152x152.png –¥–ª—è iOS...');
    await sharp(svgBuffer)
      .resize(152, 152)
      .png()
      .toFile(path.join(iconsDir, 'icon-152x152.png'));

    console.log('‚úÖ icon-152x152.png —Å–æ–∑–¥–∞–Ω');

    console.log('\nüéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:', iconsDir);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    const files = fs
      .readdirSync(iconsDir)
      .filter((file) => file.endsWith('.png'));
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    files.forEach((file) => {
      const stats = fs.statSync(path.join(iconsDir, file));
      console.log(`  - ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
    });

    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
    console.log('  - icon-16x16.png –∏ icon-32x32.png - –¥–ª—è —Ñ–∞–≤–∏–∫–æ–Ω–æ–≤');
    console.log('  - icon-192x192.png - –¥–ª—è Android PWA');
    console.log('  - icon-512x512.png - –¥–ª—è Android PWA (–≤—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ)');
    console.log('  - apple-touch-icon.png (180x180) - –¥–ª—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
    console.log('  - icon-152x152.png - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è iOS');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateIcons();
