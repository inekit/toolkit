const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

// –†–∞–∑–º–µ—Ä—ã –∏–∫–æ–Ω–æ–∫ –¥–ª—è PWA
const iconSizes = [16, 32, 192, 512];

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∏–∫–æ–Ω–æ–∫ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const iconsDir = path.join(__dirname, 'public');
if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir, { recursive: true });
}

async function generateIcons() {
    console.log('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PNG –∏–∫–æ–Ω–æ–∫ –∏–∑ SVG...');
    
    try {
        // –ß–∏—Ç–∞–µ–º SVG —Ñ–∞–π–ª
        const svgPath = path.join(__dirname, 'public', 'favicon.svg');
        if (!fs.existsSync(svgPath)) {
            throw new Error('SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ' + svgPath);
        }
        
        const svgBuffer = fs.readFileSync(svgPath);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        for (const size of iconSizes) {
            const iconName = `icon-${size}x${size}.png`;
            const iconPath = path.join(iconsDir, iconName);
            
            console.log(`üì± –°–æ–∑–¥–∞–µ–º ${iconName} (${size}x${size})...`);
            
            await sharp(svgBuffer)
                .resize(size, size)
                .png()
                .toFile(iconPath);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            const stats = fs.statSync(iconPath);
            console.log(`‚úÖ ${iconName} —Å–æ–∑–¥–∞–Ω (${(stats.size / 1024).toFixed(2)} KB)`);
        }
        
        // –°–æ–∑–¥–∞–µ–º favicon.ico (16x16)
        console.log('üîß –°–æ–∑–¥–∞–µ–º favicon.ico...');
        await sharp(svgBuffer)
            .resize(16, 16)
            .png()
            .toFile(path.join(iconsDir, 'favicon-16x16.png'));
        
        console.log('‚úÖ favicon.ico —Å–æ–∑–¥–∞–Ω');
        
        // –°–æ–∑–¥–∞–µ–º apple-touch-icon (180x180)
        console.log('üçé –°–æ–∑–¥–∞–µ–º apple-touch-icon...');
        await sharp(svgBuffer)
            .resize(180, 180)
            .png()
            .toFile(path.join(iconsDir, 'apple-touch-icon.png'));
        
        console.log('‚úÖ apple-touch-icon.png —Å–æ–∑–¥–∞–Ω');
        
        console.log('\nüéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
        console.log('üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:', iconsDir);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        const files = fs.readdirSync(iconsDir).filter(file => file.endsWith('.png'));
        console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
        files.forEach(file => {
            const stats = fs.statSync(path.join(iconsDir, file));
            console.log(`  - ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫:', error.message);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateIcons();
